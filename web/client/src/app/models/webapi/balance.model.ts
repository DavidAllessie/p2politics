/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
// add

import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator } from './validators';
import { BaseModel } from './base-model';


export interface IBalance {
    coinbase: string;
    originalBalance: number;
}

export class Balance extends BaseModel implements IBalance {
    coinbase: string;
    originalBalance: number;

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        this.coinbase = values.coinbase;
        this.originalBalance = values.originalBalance;
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                coinbase: new FormControl(this.coinbase, [Validators.required, ]),
                originalBalance: new FormControl(this.originalBalance, [Validators.required, ]),
            });

            // generate FormArray control elements
        }
        return this._formGroup;
    }
}
